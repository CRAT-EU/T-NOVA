OpenDaylight Performance Test Suite
===================================

The performance tests in this suite use ODL's RESTCONF API to add/delete
flows into/from ODL's configuration data store.

The test suite contains a script that adds/deletes ("blasts") flows into ODL's config space. The
  test executes in three steps:
  1. The specified number of flows is added in the 'add cycle'
  2. The network is polled for flow statistics from the network
     to make sure that all flows have been properly programmed into the network and stats can properly read them
  3. The flows are deleted in the flow cycle

Prerequisites:
- requests
- netaddr

The Flow Add/Delete Test
========================
To see the command line options, type:
  >./flow_add_delete_test.py --help

usage: flow_add_delete_test.py [-h] [--host HOST] [--port PORT]
                               [--flows FLOWS] [--cycles CYCLES]
                               [--threads THREADS] [--nodes NODES]
                               [--delay DELAY] [--timeout TIMEOUT] [--delete]
                               [--bulk-delete] [--auth]
                               [--startflow STARTFLOW]

Flow programming performance test: First adds and then deletes flows into the
config tree, as specified by optional parameters.

optional arguments:
  -h, --help            show this help message and exit
  --host HOST           Host where odl controller is running (default is
                        127.0.0.1)
  --port PORT           Port on which odl's RESTCONF is listening (default is
                        8181)
  --cycles CYCLES       Number of flow add/delete cycles; default 1. Both Flow
                        Adds and Flow Deletes are performed in cycles.
                        <THREADS> worker threads are started in each cycle and
                        the cycle ends when all threads finish. Another cycle
                        is started when the previous cycle finished.
  --threads THREADS     Number of request worker threads to start in each
                        cycle; default=1. Each thread will add/delete <FLOWS>
                        flows.
  --flows FLOWS         Number of flows that will be added/deleted by each
                        worker thread in each cycle; default 10
  --nodes NODES         Number of nodes if mininet is not connected;
                        default=16. If mininet is connected, flows will be
                        evenly distributed (programmed) into connected nodes.
  --delay DELAY         Time (seconds) to between inventory polls when waiting
                        for stats to catch up; default=1
  --timeout TIMEOUT     The maximum time (seconds) to wait between the add and
                        delete cycles; default=100
  --delete              Delete all added flows one by one, benchmark delete
                        performance.
  --bulk-delete         Delete all flows in bulk; default=False
  --auth                Use authenticated access to REST (username: 'admin',
                        password: 'admin'); default=False
  --startflow STARTFLOW
                        The starting Flow ID; default=0
  --file FILE           File from which to read the JSON flow template;
                        default: no file, use a built in template.

Examples:
---------
To put 5000 flows into ODL, then wait for stats to catch up and then delete
the flows in bulk (using config_cleanup):
   > ./flow_add_delete_test.py --flows=5000 --auth --bulk-delete
